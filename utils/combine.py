#!/usr/bin/env python
# -*- coding: utf-8 -*-

# This script is used to combine the divided npy files generated by
# FDTD.write_field.
#
# usage: combine.py [splitted npy files]

import numpy as np
import sys

fname = sys.argv[1]
head = fname.split('(')[0][:-1]

i_min, j_min, k_min = np.inf, np.inf, np.inf
i_max, j_max, k_max = 0, 0, 0
for fname in sys.argv[1:]:
    string_coordinate = fname.split('(')[1].split(')')[0].split(',')
    i, j, k = map(int, string_coordinate)
    if i < i_min:
        i_min = i
    if j < j_min:
        j_min = j
    if k < k_min:
        k_min = k
    if i > i_max:
        i_max = i
    if j > j_max:
        j_max = j
    if k > k_max:
        k_max = k

data = np.empty((i_max + 1, j_max + 1, k_max + 1), object)
for fname in sys.argv[1:]:
    string_coordinate = fname.split('(')[1].split(')')[0].split(',')
    i, j, k = map(int, string_coordinate)
    data[i,j,k] = np.load(fname)
    
for i in range(i_min, i_max + 1):
    for j in range(j_min, j_max + 1):
        for k in range(k_min + 1, k_max + 1):
            data[i,j,k_min] = np.dstack((data[i,j,k_min], data[i,j,k]))

data = data[:,:,k_min]

for i in range(i_min, i_max + 1):
    for j in range(j_min + 1, j_max + 1):
        data[i,j_min] = np.hstack((data[i,j_min], data[i,j]))

data = data[:,j_min]

for i in range(i_min + 1, i_max + 1):
    data[i_min] = np.vstack((data[i_min], data[i]))
    
np.save(head, data[i_min])
print head + '.npy'
